name: CI - Tests & coverage
on: 
  pull_request:
    branches:
      - next
      - main

jobs:
  backend-tests:
    name: Backend (Spring Boot) Run tests and generate test coverage
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 1.11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build with Maven
        working-directory: back
        run: mvn -B clean package

      - name: Run tests with coverage (JaCoCo)
        working-directory: back
        run: mvn clean verify jacoco:report

      - name: Upload JUnit test reports
        uses: actions/upload-artifact@v4
        with:
          name: backend-junit-reports
          path: back/target/surefire-reports/

      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: back/target/site/jacoco/

  frontend-tests:
    name: Frontend (Angular) Run tests and generate test coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install frontend dependencies
        working-directory: front
        run: npm ci

      - name: Run test with coverage
        working-directory: front
        run: npm run coverage

      - name: Upload Angular coverage report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: front/coverage/bobapp
  
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build backend
        working-directory: back
        run: mvn -B clean install -DskipTests

      - name: Install frontend dependencies
        working-directory: front
        run: npm ci

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}